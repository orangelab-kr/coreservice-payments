datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

model PaymentKeyModel {
  paymentKeyId String @id @default(uuid())
  description  String

  primary   Boolean
  identity  String
  secretKey String

  records RecordModel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CardModel {
  cardId String @id @default(uuid())

  userId     String
  orderBy    Int
  cardName   String
  billingKey String

  records RecordModel[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RecordModel {
  recordId String @id @default(uuid())

  userId String

  cardId String? // If the user deleted the card, it could be null.
  card   CardModel? @relation(fields: [cardId], references: [cardId])

  paymentKeyId String
  paymentKey   PaymentKeyModel @relation(fields: [paymentKeyId], references: [paymentKeyId])

  name          String // Ex. HI030 (이용료, 패널티)
  displayName   String
  amount        Int
  initialAmount Int
  description   String @default("")

  tid String?

  refundedAt DateTime?
  reason     String?

  processedAt DateTime? // 결제 성공 시점
  retiredAt   DateTime? // 재시도 시점

  properties Json?

  dunningCalls    DunningModel[] @relation("DunningCalls")
  dunningMessages DunningModel[] @relation("DunningMessages")
  dunningRetries  DunningModel[] @relation("DunningRetries")

  dunnedAt  DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

enum CouponGroupType {
  ONETIME
  LONGTIME
}

model CouponGroupModel {
  couponGroupId String @id @default(uuid())

  code         String?
  type         CouponGroupType @default(ONETIME)
  name         String
  description  String
  abbreviation String?

  validity Int?
  limit    Int?

  coupons    CouponModel[]
  properties Json?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CouponModel {
  couponId String @id @default(uuid())

  userId String

  couponGroupId String
  couponGroup   CouponGroupModel @relation(fields: [couponGroupId], references: [couponGroupId])
  properties    Json?

  usedAt    DateTime?
  expiredAt DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model DunningModel {
  dunningId String @id @default(uuid())

  recordCallId String?
  recordCall   RecordModel? @relation("DunningCalls", fields: [recordCallId], references: [recordId], onDelete: Cascade)

  recordMessageId String?
  recordMessage   RecordModel? @relation("DunningMessages", fields: [recordMessageId], references: [recordId], onDelete: Cascade)

  recordRetryId String?
  recordRetry   RecordModel? @relation("DunningRetries", fields: [recordRetryId], references: [recordId], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
